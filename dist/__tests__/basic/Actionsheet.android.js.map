{"version":3,"sources":["../../../__tests__/basic/Actionsheet.android.js"],"names":["REGULAR_BUTTONS","DESTRUCTIVE_INDEX","CANCEL_INDEX","ICON_BUTTONS","text","icon","iconColor","jest","mock","Platform","require","requireActual","OS","it","tree","renderer","create","ActionSheet","show","options","cancelButtonIndex","destructiveButtonIndex","title","setState","clicked","buttonIndex","toJSON","expect","toMatchSnapshot"],"mappings":"qEAAA;AACA,4B;AACA,sD;AACA;AACA;AACA,4C;;AAEA,GAAIA,iBAAkB,CAAC,UAAD,CAAa,UAAb,CAAyB,UAAzB,CAAqC,QAArC,CAA+C,QAA/C,CAAtB;AACA,GAAIC,mBAAoB,CAAxB;AACA,GAAIC,cAAe,CAAnB;AACA,GAAIC,cAAe;AACjB,CAAEC,KAAM,UAAR,CAAoBC,KAAM,mBAA1B,CAA+CC,UAAW,SAA1D,CADiB;AAEjB,CAAEF,KAAM,UAAR,CAAoBC,KAAM,WAA1B,CAAuCC,UAAW,SAAlD,CAFiB;AAGjB,CAAEF,KAAM,UAAR,CAAoBC,KAAM,UAA1B,CAAsCC,UAAW,SAAjD,CAHiB;AAIjB,CAAEF,KAAM,QAAR,CAAkBC,KAAM,OAAxB,CAAiCC,UAAW,SAA5C,CAJiB;AAKjB,CAAEF,KAAM,QAAR,CAAkBC,KAAM,OAAxB,CAAiCC,UAAW,SAA5C,CALiB,CAAnB;;;;;AAUAC,KAAKC,IAAL,CAAU,UAAV,CAAsB,UAAM;AAC1B,GAAMC,UAAWC,QAAQC,aAAR,CAAsB,UAAtB,CAAjB;AACAF,SAASG,EAAT,CAAc,SAAd;AACA,MAAOH,SAAP;AACD,CAJD;;AAMAI,GAAG,6BAAH,CAAkC,UAAM;AACtC,GAAMC,MAAOC;AACVC,MADU;AAET,8BAAC,cAAD;AACE,QAAS;AACPC,yBAAYC,IAAZ;AACE;AACEC,QAASnB,eADX;AAEEoB,kBAAmBlB,YAFrB;AAGEmB,uBAAwBpB,iBAH1B;AAIEqB,MAAO,kBAJT,CADF;;AAOE,qBAAe;AACb,MAAKC,QAAL,CAAc,CAAEC,QAASxB,gBAAgByB,WAAhB,CAAX,CAAd;AACD,CATH,CADO,GADX;;;;AAeE,8BAAC,UAAD,gEAfF,CAFS;;;AAoBVC,MApBU,EAAb;AAqBAC,OAAOb,IAAP,EAAac,eAAb;AACD,CAvBD;;AAyBAf,GAAG,0BAAH,CAA+B,UAAM;AACnC,GAAMC,MAAOC;AACVC,MADU;AAET,8BAAC,cAAD;AACE,QAAS;AACPC,yBAAYC,IAAZ;AACE;AACEC,QAAShB,YADX;AAEEiB,kBAAmBlB,YAFrB;AAGEmB,uBAAwBpB,iBAH1B;AAIEqB,MAAO,kBAJT,CADF;;AAOE,qBAAe;AACb,MAAKC,QAAL,CAAc,CAAEC,QAASrB,aAAasB,WAAb,CAAX,CAAd;AACD,CATH,CADO,GADX;;;;AAeE,8BAAC,UAAD,gEAfF,CAFS;;;AAoBVC,MApBU,EAAb;AAqBAC,OAAOb,IAAP,EAAac,eAAb;AACD,CAvBD","file":"Actionsheet.android.js","sourcesContent":["import \"react-native\";\nimport React from \"react\";\nimport renderer from \"react-test-renderer\";\nimport { Button } from \"./../../src/basic/Button\";\nimport { ActionSheet } from \"./../../src/basic/Actionsheet\";\nimport { Text } from \"./../../src/basic/Text\";\n\nvar REGULAR_BUTTONS = [\"Option 0\", \"Option 1\", \"Option 2\", \"Delete\", \"Cancel\"];\nvar DESTRUCTIVE_INDEX = 3;\nvar CANCEL_INDEX = 4;\nvar ICON_BUTTONS = [\n  { text: \"Option 0\", icon: \"american-football\", iconColor: \"#2c8ef4\" },\n  { text: \"Option 1\", icon: \"analytics\", iconColor: \"#f42ced\" },\n  { text: \"Option 2\", icon: \"aperture\", iconColor: \"#ea943b\" },\n  { text: \"Delete\", icon: \"trash\", iconColor: \"#fa213b\" },\n  { text: \"Cancel\", icon: \"close\", iconColor: \"#25de5b\" }\n];\n\n// Note: test renderer must be required after react-native.\n\njest.mock(\"Platform\", () => {\n  const Platform = require.requireActual(\"Platform\");\n  Platform.OS = \"android\";\n  return Platform;\n});\n\nit(\"renders Regular ActionSheet\", () => {\n  const tree = renderer\n    .create(\n      <Button\n        onPress={() =>\n          ActionSheet.show(\n            {\n              options: REGULAR_BUTTONS,\n              cancelButtonIndex: CANCEL_INDEX,\n              destructiveButtonIndex: DESTRUCTIVE_INDEX,\n              title: \"Select an option\"\n            },\n            buttonIndex => {\n              this.setState({ clicked: REGULAR_BUTTONS[buttonIndex] });\n            }\n          )\n        }\n      >\n        <Text>Actionsheet</Text>\n      </Button>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders Icon ActionSheet\", () => {\n  const tree = renderer\n    .create(\n      <Button\n        onPress={() =>\n          ActionSheet.show(\n            {\n              options: ICON_BUTTONS,\n              cancelButtonIndex: CANCEL_INDEX,\n              destructiveButtonIndex: DESTRUCTIVE_INDEX,\n              title: \"Select an option\"\n            },\n            buttonIndex => {\n              this.setState({ clicked: ICON_BUTTONS[buttonIndex] });\n            }\n          )\n        }\n      >\n        <Text>Actionsheet</Text>\n      </Button>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n"]}