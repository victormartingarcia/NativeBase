{"version":3,"sources":["../../../__tests__/basic/Button.android.js"],"names":["jest","mock","Platform","require","requireActual","OS","it","tree","renderer","create","toJSON","expect","toMatchSnapshot"],"mappings":"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","file":"Button.android.js","sourcesContent":["import { View } from \"react-native\";\nimport React from \"react\";\nimport renderer from \"react-test-renderer\";\nimport { Content } from \"./../../src/basic/Content\";\n// import { View } from \"./../../src/basic/View\";\nimport { Button } from \"./../../src/basic/Button\";\nimport { Text } from \"./../../src/basic/Text\";\nimport { Icon } from \"./../../src/basic/Icon\";\n\n// Note: test renderer must be required after react-native.\n\njest.mock(\"Platform\", () => {\n  const Platform = require.requireActual(\"Platform\");\n  Platform.OS = \"android\";\n  return Platform;\n});\n\nit(\"renders regular button\", () => {\n  const tree = renderer\n    .create(\n      <Content>\n        <Button light>\n          <Text>Light</Text>\n        </Button>\n        <Button info>\n          <Text>Info</Text>\n        </Button>\n        <Button primary>\n          <Text>Primary</Text>\n        </Button>\n        <Button success>\n          <Text>Success</Text>\n        </Button>\n        <Button warning>\n          <Text>Warning</Text>\n        </Button>\n        <Button danger>\n          <Text>Danger</Text>\n        </Button>\n        <Button dark>\n          <Text>Dark</Text>\n        </Button>\n      </Content>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders outline button\", () => {\n  const tree = renderer\n    .create(\n      <Content>\n        <Button bordered light>\n          <Text>Light</Text>\n        </Button>\n        <Button bordered info>\n          <Text>Info</Text>\n        </Button>\n        <Button bordered primary>\n          <Text>Primary</Text>\n        </Button>\n        <Button bordered success>\n          <Text>Success</Text>\n        </Button>\n        <Button bordered warning>\n          <Text>Warning</Text>\n        </Button>\n        <Button bordered danger>\n          <Text>Danger</Text>\n        </Button>\n        <Button bordered dark>\n          <Text>Dark</Text>\n        </Button>\n      </Content>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\n// it(\"renders rounded button\", () => {\n//   const tree = renderer\n//     .create(\n//       <Content>\n//         <Button rounded light>\n//           <Text>Light</Text>\n//         </Button>\n//         <Button rounded info>\n//           <Text>Info</Text>\n//         </Button>\n//         <Button rounded primary>\n//           <Text>Primary</Text>\n//         </Button>\n//         <Button rounded success>\n//           <Text>Success</Text>\n//         </Button>\n//         <Button rounded warning>\n//           <Text>Warning</Text>\n//         </Button>\n//         <Button rounded danger>\n//           <Text>Danger</Text>\n//         </Button>\n//         <Button rounded dark>\n//           <Text>Dark</Text>\n//         </Button>\n//       </Content>\n//     )\n//     .toJSON();\n//   expect(tree).toMatchSnapshot();\n// });\n\nit(\"renders block button\", () => {\n  const tree = renderer\n    .create(\n      <Content>\n        <Button block light>\n          <Text>Light</Text>\n        </Button>\n        <Button block info>\n          <Text>Info</Text>\n        </Button>\n        <Button block primary>\n          <Text>Primary</Text>\n        </Button>\n        <Button block success>\n          <Text>Success</Text>\n        </Button>\n        <Button block warning>\n          <Text>Warning</Text>\n        </Button>\n        <Button block danger>\n          <Text>Danger</Text>\n        </Button>\n        <Button block dark>\n          <Text>Dark</Text>\n        </Button>\n      </Content>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders full button\", () => {\n  const tree = renderer\n    .create(\n      <View>\n        <Button full light>\n          <Text>Light</Text>\n        </Button>\n        <Button full info>\n          <Text>Info</Text>\n        </Button>\n        <Button full primary>\n          <Text>Primary</Text>\n        </Button>\n        <Button full success>\n          <Text>Success</Text>\n        </Button>\n        <Button full warning>\n          <Text>Warning</Text>\n        </Button>\n        <Button full danger>\n          <Text>Danger</Text>\n        </Button>\n        <Button full dark>\n          <Text>Dark</Text>\n        </Button>\n      </View>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders custom size button\", () => {\n  const tree = renderer\n    .create(\n      <View>\n        <Button small>\n          <Text>Default Small</Text>\n        </Button>\n        <Button success>\n          <Text>Success Default</Text>\n        </Button>\n\n        <Button large dark>\n          <Text>Dark large</Text>\n        </Button>\n      </View>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders transparent button\", () => {\n  const tree = renderer\n    .create(\n      <Content>\n        <Button transparent light>\n          <Text>Light</Text>\n        </Button>\n        <Button transparent info>\n          <Text>Info</Text>\n        </Button>\n        <Button transparent primary>\n          <Text>Primary</Text>\n        </Button>\n        <Button transparent success>\n          <Text>Success</Text>\n        </Button>\n        <Button transparent warning>\n          <Text>Warning</Text>\n        </Button>\n        <Button transparent danger>\n          <Text>Danger</Text>\n        </Button>\n        <Button transparent dark>\n          <Text>Dark</Text>\n        </Button>\n      </Content>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders icon button\", () => {\n  const tree = renderer\n    .create(\n      <Content>\n        <Button iconLeft light>\n          <Icon active name=\"arrow-back\" />\n          <Text>Back</Text>\n        </Button>\n        <Button light iconRight>\n          <Text>Next</Text>\n          <Icon active name=\"arrow-forward\" />\n        </Button>\n        <Button light>\n          <Icon active name=\"arrow-down\" />\n        </Button>\n        <Button light>\n          <Icon active name=\"arrow-up\" />\n        </Button>\n        <Button iconLeft>\n          <Icon active name=\"home\" />\n          <Text>Home</Text>\n        </Button>\n        <Button iconLeft bordered>\n          <Icon active name=\"briefcase\" />\n          <Text>Work</Text>\n        </Button>\n        <Button iconLeft success>\n          <Icon active name=\"people\" />\n          <Text>People</Text>\n        </Button>\n        <Button iconLeft success bordered>\n          <Icon active name=\"paw\" />\n          <Text>Animals</Text>\n        </Button>\n        <Button iconLeft danger>\n          <Icon active name=\"close\" />\n          <Text>Trash</Text>\n        </Button>\n        <Button danger bordered>\n          <Icon active name=\"trash\" />\n        </Button>\n        <Button danger transparent>\n          <Icon active name=\"trash\" />\n        </Button>\n        <Button iconLeft warning>\n          <Icon active name=\"warning\" />\n          <Text>Dont</Text>\n        </Button>\n        <Button warning bordered>\n          <Icon active name=\"warning\" />\n        </Button>\n        <Button iconLeft info>\n          <Icon name=\"alert\" />\n          <Text>Help</Text>\n        </Button>\n        <Button info>\n          <Icon name=\"alert\" />\n        </Button>\n        <Button iconLeft dark>\n          <Icon active name=\"cog\" />\n          <Text>Settings</Text>\n        </Button>\n        <Button dark transparent>\n          <Icon active name=\"cog\" />\n        </Button>\n        <Button iconLeft transparent>\n          <Icon active name=\"beer\" />\n          <Text>Pub</Text>\n        </Button>\n      </Content>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders disabled button\", () => {\n  const tree = renderer\n    .create(\n      <Content>\n        <Button disabled>\n          <Text>Default</Text>\n        </Button>\n        <Button disabled bordered>\n          <Text>Outline</Text>\n        </Button>\n        {/* <Button disabled rounded>\n          <Text>Rounded</Text>\n        </Button> */}\n        <Button disabled large>\n          <Text>Custom</Text>\n        </Button>\n        <Button disabled iconRight>\n          <Text>Icon Button</Text>\n          <Icon name=\"home\" />\n        </Button>\n        <Button disabled block>\n          <Text>Block</Text>\n        </Button>\n\n        <Button disabled full>\n          <Text>Full</Text>\n        </Button>\n      </Content>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n"]}