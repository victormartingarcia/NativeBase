{"version":3,"sources":["../../../__tests__/basic/Footer.android.js"],"names":["jest","mock","Platform","require","requireActual","OS","it","tree","renderer","create","toJSON","expect","toMatchSnapshot","backgroundColor"],"mappings":"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","file":"Footer.android.js","sourcesContent":["import \"react-native\";\nimport React from \"react\";\nimport renderer from \"react-test-renderer\";\nimport { Container } from \"./../../src/basic/Container\";\nimport { Header } from \"./../../src/basic/Header\";\nimport { Button } from \"./../../src/basic/Button\";\nimport { Icon } from \"./../../src/basic/Icon\";\nimport { Content } from \"./../../src/basic/Content\";\nimport { Text } from \"./../../src/basic/Text\";\nimport { Footer } from \"./../../src/basic/Footer\";\nimport { FooterTab } from \"./../../src/basic/FooterTab\";\nimport { Badge } from \"./../../src/basic/Badge\";\n\n// Note: test renderer must be required after react-native.\n\njest.mock(\"Platform\", () => {\n  const Platform = require.requireActual(\"Platform\");\n  Platform.OS = \"android\";\n  return Platform;\n});\n\nit(\"renders basic Footer\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header />\n        <Content />\n        <Footer>\n          <FooterTab>\n            <Button active={true}>\n              <Text>Apps</Text>\n            </Button>\n            <Button active={false}>\n              <Text>Camera</Text>\n            </Button>\n            <Button active={false}>\n              <Text>Navigate</Text>\n            </Button>\n            <Button active={false}>\n              <Text>Contact</Text>\n            </Button>\n          </FooterTab>\n        </Footer>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders Footer with Icons\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header />\n        <Content />\n        <Footer>\n          <FooterTab>\n            <Button active={true}>\n              <Icon active={true} name=\"apps\" />\n            </Button>\n            <Button active={false}>\n              <Icon active={false} name=\"camera\" />\n            </Button>\n            <Button active={false}>\n              <Icon active={false} name=\"compass\" />\n            </Button>\n            <Button active={false}>\n              <Icon active={false} name=\"contact\" />\n            </Button>\n          </FooterTab>\n        </Footer>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders Footer with Icon and Text\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header />\n        <Content />\n        <Footer>\n          <FooterTab>\n            <Button active={true}>\n              <Icon active={true} name=\"apps\" />\n              <Text>Apps</Text>\n            </Button>\n            <Button active={false}>\n              <Icon active={false} name=\"camera\" />\n              <Text>Camera</Text>\n            </Button>\n            <Button active={false}>\n              <Icon active={false} name=\"compass\" />\n              <Text>Compass</Text>\n            </Button>\n            <Button active={false}>\n              <Icon active={false} name=\"contact\" />\n              <Text>Contact</Text>\n            </Button>\n          </FooterTab>\n        </Footer>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n\nit(\"renders Footer with Badge\", () => {\n  const tree = renderer\n    .create(\n      <Container>\n        <Header />\n        <Content />\n        <Footer>\n          <FooterTab>\n            <Button active={true} vertical badge>\n              <Badge>\n                <Text>2</Text>\n              </Badge>\n              <Icon active={true} name=\"apps\" />\n              <Text>Apps</Text>\n            </Button>\n            <Button active={false}>\n              <Icon active={false} name=\"camera\" />\n              <Text>Camera</Text>\n            </Button>\n            <Button active={false} vertical badge>\n              <Badge style={{ backgroundColor: \"green\" }}>\n                <Text>51</Text>\n              </Badge>\n              <Icon active={false} name=\"compass\" />\n              <Text>Compass</Text>\n            </Button>\n            <Button active={false}>\n              <Icon active={false} name=\"contact\" />\n              <Text>Contact</Text>\n            </Button>\n          </FooterTab>\n        </Footer>\n      </Container>\n    )\n    .toJSON();\n  expect(tree).toMatchSnapshot();\n});\n"]}